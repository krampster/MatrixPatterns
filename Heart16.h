#pragma once

#include <FastLED.h>

static const uint32_t image_data_Heart[256] PROGMEM = {
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙███∙∙███∙∙∙∙
    // ∙∙∙█▒▒▒██▒▒▒█∙∙∙
    // ∙∙█▒▒▒▒▒▒▒█▒▒█∙∙
    // ∙∙█▒▒▒▒▒▒▒▒█▒█∙∙
    // ∙∙█▒▒▒▒▒▒▒▒▒▒█∙∙
    // ∙∙█▒▒▒▒▒▒▒▒▒▒█∙∙
    // ∙∙∙█▒▒▒▒▒▒▒▒█∙∙∙
    // ∙∙∙∙█▒▒▒▒▒▒█∙∙∙∙
    // ∙∙∙∙∙█▒▒▒▒█∙∙∙∙∙
    // ∙∙∙∙∙∙█▒▒█∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙██∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    // ∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙∙
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0xffffff, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 
    0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0xfe2500, 0xffffff, 0x000000, 0x000000, 
    0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 
    0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xfe2500, 0xfe2500, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0xffffff, 0xffffff, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 
    0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000, 0x000000
};

class Heart16 : public Pattern {
public:
  Heart16(CRGB* ledsArray, int numLeds)
  {
    leds = ledsArray;
    numLeds = numLeds;
  }
  void initialize() override
  {
  }

  void drawBitmap()
  {
    // Loop through each LED and set it to the correct pixel from the bitmap.
    // LEDs start at bottom left, and pixels start at top right.
    for (uint i = 0; i < NUM_LEDS; i++) {
      leds[Utils::XY(i % kMatrixWidth, i / kMatrixWidth)] = CRGB(image_data_Heart[255 - i]);
    }

    FastLED.show();
  }

  void update() override
  {
    drawBitmap();
    delay(20);
  }

private:
  CRGB* leds;
  int numLeds;
};
